아래 요구사항을 바탕으로 예적금 상품 비교 서비스(프로젝트 이름: UMPA) 개발에 필요한 PRD(Product Requirements Documnet)를 작성해줘.

필수 확인 사항:
    - 사용 기술 스택: Django, Node.js LTS, Vue3 with Pinia, Sqlite(Django ORM)
    - 사용 라이브러리 및 프레임워크: Django REST Framework, Bootstrap 혹은 TailwindCSS, chartjs, numpy, pandas, dj-rest-auth, allauth
        - 기능 구현에 추가적으로 필요한 라이브러리는 최대한 활용
    - 사용 아키텍처: Django REST Framework(back-end) &  Vue3 with Pinia (front-end) & Sqlite(DB)
    - MVP(Minimum Viable Product) 개발에 집중. 복잡한 기능보다는 핵심 기능 완성도에 초점

핵심 기능:
    - 직관적이고 단순한 UI
        - 예시: 랜딩 페이지에는 서비스를 소개하는 내용을 포함하며 Carousel 및 적절한 이미지를 활용한다

    - 회원 커스터마이징
        - 회원 관리 라이브러리를 이용한 회원 관리 기능(회원 가입, 회원 탈퇴, 로그인, 로그아웃)
        - Django의 기본 User를 상속받아 커스텀 User 구현, 커스텀 User 활용을 위해 적절한 Serializer 구성
        - 가입한 상품 목록을 저장할 수 있는 필드는 필수적으로 포함(쉼표로 구분된 텍스트 혹은 리스트 타입)

    - 프로필 페이지
        - 회원의 기본 정보를 출력할 수 있도록 적절한 화면을 구성
        - 회원의 정보를 수정하기 위한 적절한 화면을 구성
        - 내가 가입한 금융 상품 리스트를 출력할 수 있도록 화면을 구성
        -  차트 라이브러리를 활용하여 가입한 상품 금리 정보를 그래프로 출력
        
    - 예금 & 적금 금리 비교
        - 데이터 저장
            -금융감독원의 금융상품통합비교공시API를 통해 가져온 데이터를 db에 저장하며 Django의 Queryset API인 filter 기능을 활용해 이미 db에 존재하는 데이터는 새로 저장하지 않도록 구성
        - 전체 조회
            - 상품 목록을 볼 수 있도록 적절한 화면 구성
            - 은행을 선택하여 목록을 필터링 할 수 있도록 추가적인 기능 구성
            - 특정 상품 클릭 시 상세 정보를 볼 수 있도록 적절한 화면 구성
        - 상세 정보
            - 해당 금융 상폼에 대한 자세한 정보를 출력할 수 있도록 적절한 화면 구성
            - 가입 기간에 따라 다른 금리 및 기타 금융 상품 특성을 고려하여 화면을 구성
            - [찜하기] 버튼을 추가하여, 클릭 시 해당 회원의 [가입한 상품 목록]에 상품 ID를 추가합니다. (로그인 사용자에게만 버튼 출력)

    - 사용자에게 맞는 예적금 상품 추천
        - 추천 방식은 자유롭게 구성
        - 반드시 최소 1개 이사의 금융 상품을 추천받을 수 있도록 구성
        - 예시1: OpenAI API 활용
            • OpenAI API를 활용한 상품 추천 챗봇을 구현합니다.
            • 예시 시나리오
            • [사전 준비] OpenAIAPI를 활용하여 “현재 존재하는 금융 상품 종류와 금리”를 사전에 학습 시킵니다.
            • [유저] “성향”, “현재 가입된 상품 종류” 등 본인의 상황을 설명합니다.
            • [챗봇] 사용자의 상황에 맞는 상품을 추천 해줍니다.
        - 예시2 : 나와 상황이 비슷한 사람들이 가입한 상품 10개 추천
            • 회원 필드에 나이, 현재 가진 금액, 연봉 필드를 추가합니다.
            • 10,000 명의 랜덤한 회원 데이터를 생성하고, DB에 저장합니다.
            • 나와 나이, 현재 가진 금액, 연봉의 분포가 비슷한 사람들이 가입한 상품을 10개 추천합니다.
                • 파이썬 데이터 분석 라이브러리를 활용합니다.
        - 예시3: 포트폴리오를 활용한 상품 추천
            • 회원 ID를 외래키로 하는 포트폴리오 테이블을 추가로 생성합니다.
            • 저축성향, 최애 은행 등 개인을 나타낼 수 있는 데이터를 필드에 추가합니다.
            • 데이터를 적절히 활용하여 자신에게 맞는 상품들을 추천해 줍니다.

    - 환율 계산기
        - 한국수출입은행 환율정보 API를 이용하여 환율 정보를 가져온다.
        - 국가를 선택할 수 있도록 구성
        - 원화 입력 시 선택 국가의 통화로 변환된 값을 출력
        - 타국 통화 입력 시 해당 통화를 원화로 변환한 값을 출력
    - 근처 은행 검색
        - 카카오 맵 API를 활용해 지도를 화면에 표시
        - 위치와 은행을 선택(입력)할 수 있도록 구성
        - 선택 시, 해당 위치 근처의 은행 정보를 적절하게 출력
    - 커뮤니티(게시판)
        - 회원간 소통할 수 있는 커뮤니티 기능(게시판)을 구현
        - 회원의 권한에 따라 다른 동작을 하도록 구성(예시: 본인이 작성한 게시글 및 댓글만 삭제, 수정 가능)
        - 소통 방식은 자유롭게 구성(예시: 자유게시판, 금융 상품 리뷰 게시판, 내가 가입한 상품 자랑 게시판 등)


PRD는 다음 내용을 포함해야해:
- 프로젝트 개요
- 유저 플로우
- 핵심 기능
- 기술 스택
- MVP 기능 개발 이후 추가 개선사항